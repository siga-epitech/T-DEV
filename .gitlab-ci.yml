stages:
  - install
  - build
  - test
  - deploy

# Variables globales
variables:
  NODE_ENV: 'production'

# Utilisation des runners Docker
default:
  image: node:18-alpine
before_script:
  - npm install -g npm@latest
  - apk add --no-cache docker-compose

# Étape d'installation des dépendances pour le frontend
install_frontend:
  stage: install
  script:
    - echo "Installing frontend dependencies"
    - cd trinity
    - npm install
    - echo "Frontend dependencies installed"
  artifacts:
    paths:
      - trinity/node_modules
  only:
    - feature/docker-configuration
    - main
    - dev

# Étape d'installation des dépendances pour le backend
install_backend:
  stage: install
  script:
    - echo "Installing backend dependencies"
    - cd app
    - npm install
    - echo "Backend dependencies installed"
  artifacts:
    paths:
      - app/node_modules
  only:
    - feature/docker-configuration
    - main
    - dev

# Étape de build du frontend
build_frontend:
  stage: build
  script:
    - echo "Building frontend"
    - cd trinity
    - npm run build
    - echo "Frontend built successfully"
  artifacts:
    paths:
      - trinity/build
  only:
    - feature/docker-configuration
    - main
    - dev

# Étape de tests pour le frontend
test_frontend:
  stage: test
  script:
    - echo "Running frontend tests"
    - cd trinity
    - npm test
    - echo "Frontend tests completed"
  only:
    - main
    - dev

# Étape de tests pour le backend
test_backend:
  stage: test
  script:
    - echo "Running backend tests"
    - cd app
    - npm test
    - echo "Backend tests completed"
  only:
    - feature/docker-configuration
    - main
    - dev

# Étape de test simple pour vérifier le fonctionnement du runner
test_simple:
  stage: test
  script:
    - echo "Hello, GitLab Runner!"
  only:
    - feature/docker-configuration
    - main
    - dev

# Étape de déploiement pour l'environnement de développement
deploy_dev:
  stage: deploy
  script:
    - echo "Déploiement sur l'environnement de développement"
    - docker-compose -f config/docker-compose.dev.yml up --build -d
  only:
    - feature/docker-configuration
    - dev

# Étape de déploiement pour l'environnement de production
deploy_prod:
  stage: deploy
  script:
    - echo "Déploiement sur l'environnement de production"
    - docker-compose -f config/docker-compose.prod.yml up --build -d
  only:
    - feature/docker-configuration
    - main
  when: manual  # Optionnel, pour le déploiement manuel en production
