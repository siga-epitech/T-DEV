stages:
  - clone
  - install
  - build
  - test
  - deploy

variables:
  NODE_ENV: 'production'
  DOCKER_HOST: "tcp://docker:2375/"
  DOCKER_TLS_CERTDIR: ""

default:
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache git npm
    - npm install -g npm@latest

clone_repos:
  stage: clone
  script:
    # Vérifiez la longueur du token
    - echo "Token length = ${#API_ACCESS_TOKEN}"
    # Vérifiez si le token commence bien par glpat-
    - echo "Token starts with glpat-: $(echo $API_ACCESS_TOKEN | grep -c '^glpat-')"
    # Affichez les 5 premiers et derniers caractères du token (sans révéler tout le token)
    - echo "Token preview: $(echo $API_ACCESS_TOKEN | cut -c1-5)...$(echo $API_ACCESS_TOKEN | tail -c6)"
    
    # Essayez de cloner avec des options de debug
    - git clone -v https://oauth2:$API_ACCESS_TOKEN@t-dev.epitest.eu/MAR_18/T-DEV-702-Api.git api
  artifacts:
    paths:
      - api/
      - mobile/

install_dependencies:
  stage: install
  script:
    - cd trinity && npm install
    - cd ../api && npm install
    - cd ../mobile && npm install
  artifacts:
    paths:
      - trinity/node_modules/
      - api/node_modules/
      - mobile/node_modules/
  only:
    - feature/docker-configuration-siga
    - main
    - dev

build_frontend:
  stage: build
  script:
    - cd trinity
    - npm run build
  artifacts:
    paths:
      - trinity/build
  dependencies:
    - install_dependencies
  only:
    - feature/docker-configuration-siga
    - main
    - dev

build_api:
  stage: build
  script:
    - cd api
    - npm run build
  artifacts:
    paths:
      - api/dist
  dependencies:
    - install_dependencies
  only:
    - feature/docker-configuration-siga
    - main
    - dev

test_frontend:
  stage: test
  script:
    - cd trinity
    - npm test
  only:
    - main
    - dev

test_backend:
  stage: test
  script:
    - cd api
    - npm test
  only:
    - feature/docker-configuration-siga
    - main
    - dev

deploy_dev:
  stage: deploy
  script:
    - docker-compose -f docker-compose.dev.yml up --build -d
  only:
    - feature/docker-configuration-siga
    - dev

deploy_prod:
  stage: deploy
  script:
    - docker-compose -f docker-compose.prod.yml up --build -d
  only:
    - feature/docker-configuration-siga
    - main
  when: manual